{"version":3,"sources":["./src/app/components/clasification/clasification.component.ts","./src/app/components/clasification/clasification.component.html","./src/environments/environment.ts","./src/app/services/movie.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/models/movie.ts","./src/app/services/clasification.service.ts","./src/app/models/clasification.ts","./src/app/components/movie/movie.component.ts","./src/app/components/movie/movie.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACiB;AAEhB;;;;;;;;;IC6BtD,qEAAsE;IACpE,qEAAI;IAAA,uDAAwB;IAAA,4DAAK;IACjC,qEAAI;IACF,wEAAiF;IAA9E,uXAA4C;IAC7C,wEAA0B;IAAA,+DAAI;IAAA,4DAAI;IACpC,4DAAI;IACJ,wEAAqG;IAAlG,0cAAmE;IACpE,wEAA0B;IAAA,iEAAM;IAAA,4DAAI;IACtC,4DAAI;IACN,4DAAK;IACP,4DAAK;;;IATC,0DAAwB;IAAxB,sFAAwB;;ADtB/B,MAAM,sBAAsB;IACjC,YAAmB,oBAA0C,EAC1C,YAA0B,EACzB,MAAqB;QAFtB,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,iBAAY,GAAZ,YAAY,CAAc;QACzB,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAK9C,QAAQ;QACN,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,SAAS,EAAE;IAClB,CAAC;IAED,iBAAiB,CAAC,IAAa;QAC7B,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;YAClB,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;gBAC1E,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACrB,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC3B,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACzB,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;gBACxE,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACvB,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAGD,iBAAiB;QACf,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC9D,IAAI,CAAC,oBAAoB,CAAC,cAAc,GAAG,GAAG,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mBAAmB,CAAC,aAA4B;QAC9C,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,GAAG,aAAa,CAAC;IAClE,CAAC;IAED,mBAAmB,CAAC,GAAW,EAAE,IAAY;QAE3C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;QAC3G,IAAG,IAAI,CAAC,qBAAqB,IAAI,SAAS,EAAC;YACzC,KAAK,CAAC,wFAAwF,CAAC;SAChG;aAAI;YACH,IAAI,OAAO,CAAC,0CAA0C,CAAC,EAAE;gBACvD,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;oBACnE,IAAI,CAAC,iBAAiB,EAAE,CAAC;oBACzB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACvB,CAAC,CAAC,CAAC;aACJ;SACF;IAEH,CAAC;IAED,SAAS;QACP,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC9C,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,GAAG,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS,CAAC,IAAa;QACrB,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,GAAG,IAAI,0EAAa,EAAE,CAAC;SACvE;IACH,CAAC;;4FAlEU,sBAAsB;sGAAtB,sBAAsB,kHAFtB,CAAC,2FAAoB,EAAE,2EAAY,CAAC;;QCZjD,yEAAiB;QAGb,yEAAsB;QACpB,yEAAkB;QAChB,yEAA2B;QAGzB,6EAAoF;QAAlD,8RAAY,0BAAoC,IAAC;QAEjF,8EAA4G;QAA7D,kOAA4D;QAA3G,4DAA4G;QAE5G,qEAAI;QAAA,0EAAe;QAAA,4DAAK;QAExB,0EAAwB;QACtB,yEAAO;QAAA,sFAA0B;QAAA,4DAAQ;QACzC,gFAC4D;QADb,oOAA6D;QAA5G,4DAC4D;QAC9D,4DAAM;QAEN,8EAA4E;QAAvC,2RAAS,kBAA4B,IAAC;QAAC,mEAAO;QAAA,4DAAS;QAC5F,8EAAyE;QAAA,mEAAO;QAAA,4DAAS;QAC7F,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QAGN,2EAAsB;QACpB,6EAAmC;QACjC,yEAAO;QACL,sEAAI;QAAA,gFAAoB;QAAA,4DAAK;QAC7B,sEAAI;QAAA,oEAAQ;QAAA,4DAAK;QACnB,4DAAQ;QACR,yEAAO;QACL,oHAUK;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACN,4DAAM;;;QAvCmD,0DAA4D;QAA5D,uHAA4D;QAM1D,0DAA6D;QAA7D,wHAA6D;QAK5E,0DAAsC;QAAtC,iFAAsC;QAc9C,2DAAsC;QAAtC,4GAAsC;;;;;;;;;;;;;;ACnC5E;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACbnE;AAAA;AAAA;AAAA;AAAA;AAAuC;;;AAKhC,MAAM,YAAY;IAQvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJ3B,YAAO,GAAG,gBAAgB,CAAC;QAKlC,IAAI,CAAC,aAAa,GAAG,IAAI,mDAAK,EAAE,CAAC;IACnC,CAAC;IAED,SAAS,CAAC,KAAY;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC7C,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,OAAO,CAAC;IAC7C,CAAC;IAED,WAAW,CAAC,KAAY;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,KAAK,CAAC,GAAG,EAAE,EAAE,KAAK,CAAC,CAAC;IAC9D,CAAC;IAED,WAAW,CAAC,GAAW;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;IACpD,CAAC;;wEA1BU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;;;;;;;;;;;;;;;;;;;;;ACEb,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,oBAAoB,CAAC;KAC9B;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,yEAAyD;QACnD,uEAA6C;QAAA,oEAAS;QAAA,4DAAI;QAC1D,4EAAsM;QACpM,qEAAyC;QAC3C,4DAAS;QAET,yEAAkE;QAChE,wEAA+B;QAC7B,wEAA4B;QAC1B,uEAA0C;QAAA,qEAAU;QAAA,2EAAsB;QAAA,qEAAS;QAAA,4DAAO;QAAA,4DAAI;QAChG,4DAAK;QACL,yEAAqB;QACnB,wEAAuD;QAAA,2EAAe;QAAA,4DAAI;QAC5E,4DAAK;QAEP,4DAAK;QAEP,4DAAM;QACR,4DAAM;QAEV,2EAA2B;QACzB,4EAA+B;QACjC,4DAAM;;QArBwB,0DAAoB;QAApB,6IAAoB;QAQjB,0DAAoB;QAApB,6IAAoB;QAGpB,0DAAiC;QAAjC,6IAAiC;;;;;;;;;;;;;;ACXlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACO;AACvB;AACc;AAEA;AACT;AAC6C;AACxB;;;AAmB7D,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FADb,EAAE,YARJ;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,kEAAmB;YACnB,qEAAgB;YAChB,uDAAY,CAAC,OAAO,EAAE;SACvB;mIAIU,SAAS,mBAflB,2DAAY;QACZ,wGAAsB;QACtB,gFAAc,aAGd,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QACX,kEAAmB;QACnB,qEAAgB;;;;;;;;;;;;;ACtBpB;AAAA;AAAO,MAAM,KAAK;IACd,YAAY,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,QAAQ,GAAG,EAAE,EAAE,aAAa,GAAG,EAAE;QAC9D,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IAErC,CAAC;CAMN;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAwD;;;AAKjD,MAAM,oBAAoB;IAK/B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF3B,YAAO,GAAG,oBAAoB,CAAC;QAGtC,IAAI,CAAC,qBAAqB,GAAG,IAAI,mEAAa,EAAE,CAAC;IACnD,CAAC;IAED,iBAAiB;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,IAAI,CAAC,OAAO,CAAC;IACrD,CAAC;IAED,iBAAiB,CAAC,aAA4B;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;IACrD,CAAC;IAED,mBAAmB,CAAC,aAA4B;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,aAAa,CAAC,GAAG,EAAE,EAAE,aAAa,CAAC,CAAC;IAC9E,CAAC;IAED,mBAAmB,CAAC,GAAW;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;IACpD,CAAC;;wFAvBU,oBAAoB;uGAApB,oBAAoB,WAApB,oBAAoB,mBAFnB,MAAM;;;;;;;;;;;;;ACNpB;AAAA;AAAO,MAAM,aAAa;IACtB,YAAY,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE;QAC3B,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;CAIN;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACiB;AACgB;;;;;;;;IC2B1D,6EAC0E;IACvE,uDACH;IAAA,4DAAS;;;IAHD,yFAA6B;IAElC,0DACH;IADG,iGACH;;;;IAsBZ,qEAA8C;IAC5C,qEAAI;IAAA,uDAAgB;IAAA,4DAAK;IACzB,qEAAI;IAAA,uDAAoB;IAAA,4DAAK;IAC7B,qEAAI;IAAA,uDAA8B;IAAA,4DAAK;IACvC,qEAAI;IACF,wEAAiE;IAA9D,wVAA4B;IAC7B,wEAA0B;IAAA,gEAAI;IAAA,4DAAI;IACpC,4DAAI;IACJ,yEAA6E;IAA1E,8aAA2C;IAC5C,yEAA0B;IAAA,kEAAM;IAAA,4DAAI;IACtC,4DAAI;IACN,4DAAK;IACP,4DAAK;;;IAXC,0DAAgB;IAAhB,8EAAgB;IAChB,0DAAoB;IAApB,kFAAoB;IACpB,0DAA8B;IAA9B,4FAA8B;;AD/CrC,MAAM,cAAc;IAEzB,YAAmB,YAA0B,EAC1B,oBAA0C,EACzC,MAAqB;QAFtB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,yBAAoB,GAApB,oBAAoB,CAAsB;QACzC,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAE9C,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAKD,SAAS,CAAC,IAAa;QACrB,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;YAClB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;gBAC1D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACrB,IAAI,CAAC,SAAS,EAAE,CAAC;YACnB,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACzB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;gBACxD,IAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACvB,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,SAAS;QACP,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC9C,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,GAAG,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,KAAY;QACtB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QAClB,IAAI,CAAC,YAAY,CAAC,aAAa,GAAG,KAAK,CAAC;IAE1C,CAAC;IAED,WAAW,CAAC,GAAW,EAAE,IAAY;QACnC,IAAI,OAAO,CAAC,0CAA0C,CAAC,EAAE;YACvD,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;gBACnD,IAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACvB,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC9D,IAAI,CAAC,oBAAoB,CAAC,cAAc,GAAG,GAAG,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS,CAAC,IAAa;QACrB,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,YAAY,CAAC,aAAa,GAAG,IAAI,0DAAK,EAAE,CAAC;SAC/C;IACH,CAAC;;4EA7DU,cAAc;8FAAd,cAAc,0GAFd,CAAC,2EAAY,EAAE,2FAAoB,CAAC;;QCXjD,yEAAiB;QAGb,yEAAsB;QACpB,yEAAkB;QAChB,yEAA2B;QAGzB,6EAAuE;QAAlC,uRAAY,kBAAoB,IAAC;QAEpE,8EAA4F;QAA7C,0MAA4C;QAA3F,4DAA4F;QAE5F,qEAAI;QAAA,6EAAkB;QAAA,4DAAK;QAE3B,0EAAwB;QACtB,yEAAO;QAAA,mEAAO;QAAA,4DAAQ;QACtB,gFAC8D;QADf,4MAA6C;QAA5F,4DAC8D;QAChE,4DAAM;QAEN,0EAAwB;QACpB,yEAAO;QAAA,qEAAS;QAAA,4DAAQ;QACxB,iFACuD;QADA,gNAAiD;QAAxG,4DACuD;QAC3D,4DAAM;QAEN,0EAAwB;QACpB,yEAAO;QAAA,0EAAc;QAAA,4DAAQ;QAG3B,kFACgE;QAAhE,sNAAsD;QACpD,mHAGS;QACX,4DAAS;QACf,4DAAM;QAGN,8EAAkF;QAA7C,oRAAS,kBAAoB,IAAC;QAAe,mEAAO;QAAA,4DAAS;QAClG,8EAAiE;QAAA,mEAAO;QAAA,4DAAS;QACrF,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QAGN,2EAAsB;QACpB,6EAAmC;QACjC,yEAAO;QACL,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,oEAAQ;QAAA,4DAAK;QACjB,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QACtB,sEAAI;QAAA,oEAAQ;QAAA,4DAAK;QACnB,4DAAQ;QACR,yEAAO;QACL,4GAYK;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACN,4DAAM;;;QA/DmD,0DAA4C;QAA5C,uGAA4C;QAM1C,0DAA6C;QAA7C,wGAA6C;QAMnC,0DAAiD;QAAjD,4GAAiD;QAStG,0DAAsD;QAAtD,iHAAsD;QAElB,0DAAsC;QAAtC,4GAAsC;QAQ9C,0DAA8B;QAA9B,iFAA8B;QAgB9C,2DAAsB;QAAtB,4FAAsB;;;;;;;;;;;;;;ACxDpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAEvD,cAAc;AAC8E;AACxB;;;AAEpE,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,wGAAsB,EAAE;IAC5D,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,gFAAc,EAAE;IACvC,gEAAgE;IAChE,qEAAqE;IACrE,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE;CAClD,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;ACjBuB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgForm } from \"@angular/forms\";\nimport { Clasification } from 'src/app/models/clasification';\nimport { ClasificationService } from 'src/app/services/clasification.service'; \nimport { Movie } from 'src/app/models/movie';\nimport { MovieService } from 'src/app/services/movie.service';\n\n@Component({\n  selector: 'app-clasification',\n  templateUrl: './clasification.component.html',\n  styleUrls: ['./clasification.component.css'],\n  providers: [ClasificationService, MovieService],\n})\nexport class ClasificationComponent implements OnInit {\n  constructor(public clasificationService: ClasificationService,\n              public movieService: MovieService,\n              private toastr: ToastrService) { }\n\n\n  clasificacionPelicula;\n\n  ngOnInit(): void {\n    this.getClasifications();\n    this.getMovies()\n  }\n\n  saveClasification(form?: NgForm) {\n    if (form.value._id) {\n      this.clasificationService.updateClasification(form.value).subscribe((res) => {\n        this.resetForm(form);\n        this.getClasifications();\n      });\n    } else {\n      delete form.value[\"_id\"];\n      this.clasificationService.postClasification(form.value).subscribe((res) => {\n        this.getClasifications();\n        this.resetForm(form);\n      });\n    }\n  }\n\n\n  getClasifications() {\n    this.clasificationService.getClasifications().subscribe((res) => {\n      this.clasificationService.clasifications = res;\n    });\n  }\n\n  updateClasification(clasification: Clasification) {\n    this.clasificationService.selectedClasification = clasification;\n  }\n\n  deleteClasification(_id: string, form: NgForm) {\n    \n    this.clasificacionPelicula = this.movieService.movies.find(element => element.clasification[\"_id\"] == _id);\n    if(this.clasificacionPelicula != undefined){\n      alert('No se puede eliminar la clasificacion debido a que esta asociada a una o mas peliculas')\n    }else{\n      if (confirm(\"¿Estás segura de que quieres eliminarlo?\")) {\n        this.clasificationService.deleteClasification(_id).subscribe((res) => {\n          this.getClasifications();\n          this.resetForm(form);\n        });\n      }\n    }\n    \n  }\n\n  getMovies() {\n    this.movieService.getMovies().subscribe((res) => {\n      this.movieService.movies = res;\n    });\n  }\n\n  resetForm(form?: NgForm) {\n    if (form) {\n      form.reset();\n      this.clasificationService.selectedClasification = new Clasification();\n    }\n  }\n\n\n}\n","<div class=\"row\">\n\n    <!-- FORM -->\n    <div class=\"col-md-4\">\n      <div class=\"card\">\n        <div class=\"card-body p-4\">\n  \n          <!-- FORM -->\n          <form #clasificationForm=\"ngForm\" (ngSubmit)=\"saveClasification(clasificationForm)\">\n            <!-- THE Id's Employee -->\n            <input type=\"hidden\" name=\"_id\" #_id=\"ngModel\" [(ngModel)]=\"clasificationService.selectedClasification._id\">\n\n            <h4>Clasificaciones</h4>\n\n            <div class=\"form-group\">\n              <label>Ingrese una clasificacion:</label>\n              <input type=\"text\" name=\"name\" #name=\"ngModel\" [(ngModel)]=\"clasificationService.selectedClasification.name\"\n                placeholder=\"clasificacion\" class=\"form-control\" required>\n            </div>\n  \n            <button class=\"btn btn-primary mr-2\" (click)=\"resetForm(clasificationForm)\">Limpiar</button>\n            <button class=\"btn btn-secondary\" [disabled]=\"clasificationForm.invalid\">Guardar</button>\n        </form>\n      </div>\n    </div>\n  </div>\n  \n  <!-- TABLE -->\n  <div class=\"col-md-8\">\n    <table class=\"table table-striped\">\n      <thead>\n        <th>Nombre clasificacion</th>\n        <th>Acciones</th>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let clasification of clasificationService.clasifications\">\n          <td>{{ clasification.name }}</td>\n          <td>\n            <a (click)=\"updateClasification(clasification)\" class=\"btn btn-secondary btn-sm\">\n              <i class=\"material-icons\">edit</i>\n            </a>\n            <a (click)=\"deleteClasification(clasification._id, clasificationForm)\" class=\"btn btn-danger btn-sm\">\n              <i class=\"material-icons\">delete</i>\n            </a>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  </div>\n  ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Movie } from '../models/movie'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n\n  selectedMovie: Movie;\n  movies: Movie[];\n  readonly URL_API = '/api/peliculas';\n\n   \n  \n  constructor(private http: HttpClient) {\n    this.selectedMovie = new Movie();\n  }\n\n  postMovie(movie: Movie) {\n    return this.http.post(this.URL_API, movie);\n  }\n\n  getMovies() {\n    return this.http.get<Movie[]>(this.URL_API)\n  }\n\n  updateMovie(movie: Movie) {\n    return this.http.put(this.URL_API + `/${movie._id}`, movie);\n  }\n\n  deleteMovie(_id: string) {\n    return this.http.delete(this.URL_API + `/${_id}`);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MoviesApp-frontend';\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <a class=\"navbar-brand\" [routerLink]=\"['/']\">MoviesApp</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n    \n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav mr-auto\">\n          <li class=\"nav-item active\">\n            <a class=\"nav-link\"  [routerLink]=\"['/']\">Peliculas <span class=\"sr-only\">(current)</span></a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\"  [routerLink]=\"['/clasificacion']\">Clasificaciones</a>\n          </li>\n        \n        </ul>\n        \n      </div>\n    </nav>\n\n<div class=\"container p-4\">\n  <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { ToastrModule } from 'ngx-toastr';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ClasificationComponent } from './components/clasification/clasification.component';\nimport { MovieComponent } from './components/movie/movie.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ClasificationComponent,\n    MovieComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Movie {\r\n    constructor(_id = \"\", name = \"\", director = \"\", clasification = \"\") {\r\n        this._id = _id;\r\n        this.name = name;\r\n        this.director = director;\r\n        this.clasification = clasification;\r\n\r\n      }\r\n    \r\n      _id: string;\r\n      name: string;\r\n      director: string;\r\n      clasification: string;\r\n}","import { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Clasification } from '../models/clasification';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClasificationService {\n  selectedClasification: Clasification;\n  clasifications: Clasification[];\n  readonly URL_API = '/api/Clasificacion';\n\n  constructor(private http: HttpClient) {\n    this.selectedClasification = new Clasification();\n  }\n\n  getClasifications() {\n    return this.http.get<Clasification[]>(this.URL_API)\n  }\n\n  postClasification(clasification: Clasification) {\n    return this.http.post(this.URL_API, clasification);\n  }\n  \n  updateClasification(clasification: Clasification) {\n    return this.http.put(this.URL_API + `/${clasification._id}`, clasification);\n  }\n\n  deleteClasification(_id: string) {\n    return this.http.delete(this.URL_API + `/${_id}`);\n  }\n}\n","export class Clasification {\r\n    constructor(_id = \"\", name = \"\") {\r\n        this._id = _id;\r\n        this.name = name;\r\n      }\r\n    \r\n      _id: string;\r\n      name: string;\r\n}","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgForm } from \"@angular/forms\";\nimport { Movie } from 'src/app/models/movie';\nimport { MovieService } from 'src/app/services/movie.service'; \nimport { ClasificationService } from 'src/app/services/clasification.service';\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css'],\n  providers: [MovieService, ClasificationService]\n})\nexport class MovieComponent implements OnInit {\n\n  constructor(public movieService: MovieService, \n              public clasificationService: ClasificationService,\n              private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.getMovies();\n    this.getClasifications();\n  }\n\n  \n\n  \n  saveMovie(form?: NgForm) {\n    if (form.value._id) {\n      this.movieService.updateMovie(form.value).subscribe((res) => {\n        this.resetForm(form);\n        this.getMovies();\n      });\n    } else {\n      delete form.value[\"_id\"];\n      this.movieService.postMovie(form.value).subscribe((res) => {\n        this.getMovies();\n        this.resetForm(form);\n      });\n    }\n  }\n\n  getMovies() {\n    this.movieService.getMovies().subscribe((res) => {\n      this.movieService.movies = res;\n    });\n  }\n\n  updateMovie(movie: Movie) {\n    console.log(movie)\n    this.movieService.selectedMovie = movie;\n    \n  }\n\n  deleteMovie(_id: string, form: NgForm) {\n    if (confirm(\"¿Estás segura de que quieres eliminarlo?\")) {\n      this.movieService.deleteMovie(_id).subscribe((res) => {\n        this.getMovies();\n        this.resetForm(form);\n      });\n    }\n  }\n\n  getClasifications() {\n    this.clasificationService.getClasifications().subscribe((res) => {\n      this.clasificationService.clasifications = res;\n    });\n  }\n\n  resetForm(form?: NgForm) {\n    if (form) {\n      form.reset();\n      this.movieService.selectedMovie = new Movie();\n    }\n  }\n\n}\n","<div class=\"row\">\n\n    <!-- FORM -->\n    <div class=\"col-md-4\">\n      <div class=\"card\">\n        <div class=\"card-body p-4\">\n  \n          <!-- FORM -->\n          <form novalidate #movieForm=\"ngForm\" (ngSubmit)=\"saveMovie(movieForm)\">\n            <!-- THE Id's Employee -->\n            <input type=\"hidden\" name=\"_id\" #_id=\"ngModel\" [(ngModel)]=\"movieService.selectedMovie._id\">\n            \n            <h4>Registrar pelicula</h4>\n\n            <div class=\"form-group\">\n              <label>Nombre:</label>\n              <input type=\"text\" name=\"name\" #name=\"ngModel\" [(ngModel)]=\"movieService.selectedMovie.name\"\n                placeholder=\"Nombre pelicula\" class=\"form-control\" required>\n            </div>\n\n            <div class=\"form-group\">\n                <label>Director:</label>\n                <input type=\"text\" name=\"director\" #director=\"ngModel\" [(ngModel)]=\"movieService.selectedMovie.director\"\n                  placeholder=\"Director\" class=\"form-control\" required>\n            </div>\n  \n            <div class=\"form-group\">\n                <label>Clasificacion:</label>\n                \n\n                  <select class=\"form-control form-control-sm\" name=\"clasification\" #clasification=\"ngModel\" \n                  [(ngModel)]=\"movieService.selectedMovie.clasification\" required>\n                    <option [ngValue]=\"clasification._id\" \n                            *ngFor=\"let clasification of clasificationService.clasifications\">\n                       {{clasification.name}}\n                    </option>\n                  </select>\n            </div>\n            \n  \n            <button class=\"btn btn-primary mr-2\" (click)=\"resetForm(movieForm)\" type=\"button\">Limpiar</button>\n            <button class=\"btn btn-secondary\" [disabled]=\"movieForm.invalid\">Guardar</button>\n        </form>\n      </div>\n    </div>\n  </div>\n  \n  <!-- TABLE -->\n  <div class=\"col-md-8\">\n    <table class=\"table table-striped\">\n      <thead>\n        <th>Nombre</th>\n        <th>Director</th>\n        <th>Clasificacion</th>\n        <th>Acciones</th>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let movie of movieService.movies\">\n          <td>{{ movie.name }}</td>\n          <td>{{ movie.director }}</td>\n          <td>{{ movie.clasification.name }}</td>\n          <td>\n            <a (click)=\"updateMovie(movie)\" class=\"btn btn-secondary btn-sm\">\n              <i class=\"material-icons\">edit</i>\n            </a>\n            <a (click)=\"deleteMovie(movie._id, movieForm)\" class=\"btn btn-danger btn-sm\">\n              <i class=\"material-icons\">delete</i>\n            </a>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  </div>\n  ","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n// componentes\nimport { ClasificationComponent } from './components/clasification/clasification.component';\nimport { MovieComponent } from './components/movie/movie.component';\n\nconst routes: Routes = [\n  { path: 'clasificacion', component: ClasificationComponent },\n  { path: '', component: MovieComponent },\n  //{ path: 'crear-producto', component: CrearProductoComponent },\n  //{ path: 'editar-producto/:id', component: CrearProductoComponent },\n  { path: '**', redirectTo: '', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}